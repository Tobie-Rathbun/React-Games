/* Style Variables */
:root {
  /* Color Variables */
  --dark-background: #121212;
  --primary-text-color: #e0e0e0;
  --secondary-text-color: #adadad;
  --accent-color: #6200ee;
  --accent-color-dark: #170138;
  --highlight-color: #bb86fc;
  --highlight-color-dark: #352745;
  --highlight-color-light: #dfc5ff;

  /* Component-Specific Colors */
  --chord-player-background: #333333;
  --chord-element-background: #424242;
  --chord-element-border: #636363;
}

/* General styles */
body {
  margin: 0;
  padding: 0;
  font-family: 'Arial', sans-serif;
  color: var(--primary-text-color);
  position: relative;
  background: none;
  overflow-y: auto;
}

/* Main content */
main {
  position: relative;
  z-index: 1; /* Ensure content is above the background */
}

h1, h2, h3, h4, h5, h6 {
  color: var(--secondary-text-color);
}

/* General layout wrapper */
.layout-wrapper {
  position: relative; /* Create stacking context */
  overflow: hidden;
  z-index: 1;
}

.animated-background {
  position: fixed; /* Ensures it stays in place as you scroll */
  top: 0;
  left: 0;
  width: 100vw; /* Full viewport width */
  height: 100vh; /* Full viewport height */
  background: linear-gradient(
  45deg,
  var(--highlight-color-dark),
  var(--accent-color-dark),
  var(--dark-background),
  #040115,
  #000
  
);

  background-size: 400% 400%; /* Makes the gradient larger than the viewport for smooth animation */
  z-index: -1;
}




/* Animations */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes gradientAnimation {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}




/* Links */

/* For links inside a span */
span.link a {
  display: inline-block;
  transition: opacity 0.75s, transform 0.75s ease-in-out, padding 0.75s ease-in-out;
  color: var(--highlight-color);
  opacity: 1;
  padding: 0;
}

span.link a:hover {
  transform: scale(1.03);
  opacity: 1;
  padding-left: 1%;
  padding-right: 1%;
}

a.link {
  display: inline-block; /* Required for transform to work */
  transition: opacity 0.4s, transform 0.4s ease-in-out;
  color: var(--highlight-color);
  opacity: 1;
}

a.link:hover {
  transform: scale(1.05);
  opacity: 1;
}



/* Contact Form */
.contact-form {
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--chord-player-background);
  padding: 4% 3%;
  border-radius: 8px;
  max-width: 33%;
  min-height: 50%;
  margin: 3% auto;
}

.contact-form h1 {
  padding-top: 0;
  margin-top: -4%;
  margin-left: -2%;
}

.contact-form input[type="text"],
.contact-form input[type="email"],
.contact-form textarea {
  background-color: var(--chord-element-background);
  color: var(--primary-text-color);
  border: 1px solid var(--chord-element-border);
  padding: 2% 1%;
  border-radius: 4px;
  font-size: 16px;
  width: 90%;
  font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
  margin: 2% auto;
  margin-left: 3.5%;
}

.contact-form textarea {
  resize: vertical;
  height: 30%;
}

.contact-form button {
  background-color: var(--accent-color);
  color: var(--primary-text-color);
  border: none;
  padding: 2% 2%;
  margin: 2% auto 5%;
  margin-left: 3.5%;
  border-radius: 4px;
  font-size: 16px;
  cursor: pointer;
  width: 92.5%;
}

.contact-form .error-message {
  color: var(--error-color, #d9534f); /* Use a variable or default to red */
  font-size: 14px;
  margin: 2%;
  margin-left: 0%;
  text-align: center;
}

.contact-form .success-message {
  color: var(--success-color, #5cb85c); /* Use a variable or default to green */
  font-size: 14px;
  margin: 2%;
  margin-left: 0%;
  text-align: center;
}










/* Page Wrapper */
.-page {
  text-align: center;
  margin: 0 auto;
  width: 100%; /* Adjust width as needed */
  z-index: 1;
}

.-page h1 {
  font-size: 2em;
}

.-page p {
  margin: 10px 0;
}

.-page a {
  text-decoration: none;
}

.-page a:hover {
  text-decoration: underline;
}

.about-bio {
  width: 75%;
  text-align: left;
  margin-left: 12.5%;
  margin-top: 5%;
  margin-bottom: 3%;
}








/* Rock, Paper, Scissors RPS */

.flex-item {
  flex: 1 1 auto; /* Allow flexible resizing */
  min-width: 300px; /* Ensure minimum width */
  text-align: left; /* Center-align content */
}


.horiz-container {
  display: flex;
  justify-content: center; /* Center the buttons horizontally */
  align-items: center; /* Align the buttons vertically */
  gap: 1rem; /* Add spacing between buttons */
  flex-wrap: wrap; /* Allow wrapping on smaller screens */
  margin: 1rem 0; /* Add some vertical spacing */
}

.btn {
  padding: 0.5rem 1rem;
  background-color: var(--accent-color);
  color: var(--primary-text-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
  min-width: 120px; /* Ensure consistent button size */
  text-align: center;
}

.btn:disabled {
  background-color: var(--chord-element-background);
  cursor: not-allowed;
}


.choice-btn {
  margin: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: var(--accent-color);
  color: var(--primary-text-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
}

.choice-btn:hover {
  transform: scale(1.10);
}

.choice-btn:active {
  transform: scale(0.90);
}

.results-container {
  margin-top: 1rem;
  text-align: left;
}

.stats-container {
  display: flex;
  justify-content: space-around;
  align-items: flex-start;
  flex-wrap: wrap; /* Ensure boxes wrap if the container width is too small */
  gap: 1rem; /* Add spacing between boxes */
}

.stats-box {
  display: inline-block;
  vertical-align: top;
  text-align: left;
  padding: 1rem;
  border: 1px solid var(--chord-element-border);
  background-color: var(--chord-element-background);
  color: var(--primary-text-color);
  margin: 1rem;
  width: 250px; /* Ensure equal width */
  min-height: 200px; /* Force consistent height */
  box-sizing: border-box; /* Include padding in height */
  border-radius: 8px;
}

.matrix-box {
  width: 400px; /* Adjust the width to fit the matrix content */
  min-height: 200px; /* Match the height of other boxes */
  overflow-x: auto; /* Add horizontal scroll if needed */
  border: 1px solid var(--chord-element-border);
  background-color: var(--chord-player-background);
  color: var(--primary-text-color);
}


.results-container h3 {
  display: flex; /* Use flexbox for alignment */
  justify-content: space-between; /* Space the label and value */
  gap: 1rem; /* Add space between text and value */
  margin: 0.5rem 0; /* Add some vertical spacing between rows */
}


#c1 { top: 60px; left: 10px; }
#c2 { top: 60px; left: 475px; }
#c3 { top: 60px; left: 825px; }
#c4 { top: 425px; left: 475px; }
#c5 { top: 425px; left: 750px; }
#c6 { top: 425px; left: 1025px; }

#c1:active, #c2:active, #c3:active, #c4:active, #c5:active, #c6:active {
  cursor: grabbing;
}

#c1, #c2, #c3, #c4, #c5, #c6 {
  position: absolute;
  cursor: grab;
  user-select: none; /* Prevent text selection during dragging */
  touch-action: none; /* Disable touch scrolling for mobile dragging */
  width: 20%; /* Set proportional width */
  max-width: 30%; /* Limit the maximum width */
  height: auto; /* Allow height to adjust based on content */
}

/* Flex container for alignment */
.flex-container {
  display: flex;
  flex-direction: column; /* Stack items vertically by default */
  justify-content: center;
  align-items: center; /* Align items horizontally at the center */
  gap: 1rem;
  padding: 2rem;
  max-width: 1200px; /* Optional: limit container width */
  margin: 0 auto; /* Center the container */
}

/* For horizontal alignment on larger screens */
@media (min-width: 768px) {
  .flex-container {
    flex-direction: row; /* Switch to horizontal layout on larger screens */
    flex-wrap: wrap; /* Allow wrapping if thereâ€™s insufficient space */
  }
}

/* Flex items with equal spacing and alignment */
.flex-item {
  flex: 1 1 300px; /* Flexible width with a minimum of 300px */
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content horizontally */
  justify-content: space-between; /* Space out child items vertically */
  padding: 1rem;
  box-sizing: border-box;
  background-color: var(--chord-player-background); /* Match theme */
  border-radius: 8px; /* Rounded corners */
  text-align: center; /* Center align text */
}

.flex-item, .stats-box {
  transform: scale(var(--dynamic-scale));
  transform-origin: top left; /* Adjust the scaling origin */
}


#c1, #c3 h2 {
  color: var(--primary-text-color);
}

#c1, #c3 {
  flex: 1 1 300px; /* Flexible width with a minimum of 300px */
  display: flex;
  flex-direction: column;
  align-items: center; /* Center content horizontally */
  justify-content: space-between; /* Space out child items vertically */
  padding: 1rem;
  box-sizing: border-box;
  background-color: var(--chord-element-border); /* Match theme */
  border-radius: 8px; /* Rounded corners */
  text-align: center; /* Center align text */
}
#c1, #c3 h1, h2, label {
  color: #000;
}

#c1, #c3 h2 {
  color: var(--dark-background);
  font-size: 27px;
}

#c1, #c3 h3 {
  color: var(--chord-player-background);
}

#c1, #c3 h4 {
  color: var(--chord-element-background);
  text-align: center;
}

#behavior-select {
  margin-left: 1rem;
  margin-bottom: 1rem;
}

/* Buttons container */
.btn {
  width: 100%; /* Buttons take full width */
  max-width: 200px; /* Optional: limit button size */
  margin: 0.5rem 0; /* Space between buttons */
  text-align: center;
}

/* Stats and matrix container */
.stats-container {
  display: flex;
  flex-wrap: wrap; /* Wrap stats on small screens */
  justify-content: center; /* Center content horizontally */
  gap: 1rem;
  margin-top: 2rem;
  overflow-y: auto;
  overflow-x: auto;
}

/* Stats box for consistent height and alignment */
.stats-box {
  flex: 1 1 250px; /* Flexible layout with minimum width */
  min-height: 200px; /* Consistent height for all boxes */
  padding: 1rem;
  background-color: var(--chord-element-background);
  border: 1px solid var(--chord-element-border);
  border-radius: 8px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column; /* Stack content vertically */
  align-items: center;
  justify-content: space-between; /* Space content evenly */
}

/* Transition matrix box with wider width */
.matrix-box {
  flex: 2 1 400px; /* Make matrix box wider */
  overflow-x: auto; /* Add horizontal scroll if needed */
  overflow-y: auto;
  padding: 1rem;
}

.flex-item, .stats-box, .matrix-box {
  flex: 1 1 300px; /* Flexible width with a minimum of 300px */
  max-width: 300px; /* Limit maximum width */
  text-align: center;
  padding: 1rem;
  border-radius: 8px;
  background-color: var(--chord-player-background);
}

/* Add responsive scaling */
@media (max-width: 768px) {
  .flex-item, .stats-box, .matrix-box {
    flex: 1 1 100%; /* Full width for smaller screens */
    max-width: 100%; /* Ensure content does not overflow */
    padding: 0.5rem;
  }

  .btn, .choice-btn {
    font-size: 14px; /* Reduce font size for smaller screens */
    padding: 0.4rem 0.8rem; /* Adjust padding */
  }
}

@media (max-width: 480px) {
  .flex-item, .stats-box, .matrix-box {
    padding: 0.2rem;
  }

  .btn, .choice-btn {
    font-size: 12px;
    padding: 0.3rem 0.6rem;
  }
}



















/* Poker 2D */


/* Start New Game Button */
.start-button {
  position: absolute;
  top: 3rem;
  left: 1rem;
  padding: 0.5rem 1rem;
  background-color: var(--accent-color);
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
}

.start-button:hover {
  background-color: var(--highlight-color);
  transform: scale(1.05);
}

/* Game Info Line */
.game-info-line {
  display: flex;
  justify-content: space-around;
  gap: 1rem;
  margin: 3rem 0 1rem; /* Adds spacing below the Start New Game button */
  font-size: 1rem;
  font-weight: bold;
  color: var(--primary-text-color);
}

.community-cards {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
  margin: 1rem auto;
  padding: 1rem 0;
}

.card {
  width: 50px;
  height: 70px;
  border: 2px solid #000;
  text-align: center;
  line-height: 70px;
  background-color: white;
  color: black;
  border-radius: 5px;
}




/* Player Actions */
.player-actions {
  display: flex;
  justify-content: center;
  gap: 1rem;
  margin: 1rem 0;
}

.action-button {
  padding: 0.5rem 1rem;
  background-color: var(--accent-color);
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.3s;
}

.action-button:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

.action-button:hover:enabled {
  background-color: var(--highlight-color);
  transform: scale(1.05);
}

/* Players Container */
.players-container {
  display: flex;
  justify-content: space-around;
  gap: 1rem;
  margin-top: 2rem;
}

.player-box {
  width: 15%; /* Each player container takes 15% of the width */
  max-width: 15%;
  border: 1px solid #ccc;
  padding: 1rem;
  text-align: left;
  background-color: var(--dark-background);
  color: var(--primary-text-color);
  border-radius: 5px;
}



.player-folded {
  opacity: 0.5;
  background-color: var(--chord-element-background);
}

.player-current {
  border: 2px solid var(--accent-color);
  background-color: var(--highlight-color);
  color: var(--dark-background)
}
.player-current h3 {
  color: var(--dark-background); /* Replace with your desired color */
}





/* Home Page */

.loading-overlay.hidden {
  display: none;
}


/* Emoji */
.emoji {
  font-family: 'Segoe UI Emoji', 'Apple Color Emoji', 'Noto Color Emoji', sans-serif;
  font-size: 500%;
  transition: transform 0.6s ease;
  position: relative; /* Required for floating animation */
  
}

span.emoji, img.emoji {
  display: inline-block;
  font-size: 115%;
  height: 1em;
  width: auto;
  transition: transform 0.6s ease;
  vertical-align: middle;
}

img.emoji {
  width: 88%;
  height: auto;
}

span.emoji {
  font-family: 'Segoe UI Emoji', 'Apple Color Emoji', 'Noto Color Emoji', sans-serif;
}

.emoji:hover {
  animation: pulsate 0.6s ease-in-out; /* Use pulsate keyframes on hover */
}

.emoji-container {
  display: flex;
  gap: 1rem; /* Adjust spacing between emojis */
  justify-content: center;
  align-items: center;
  margin-top: -18%;
}

.emoji#cowboy {
  margin-top: -1.35%;
}
.emoji#cowboy:hover {
  animation: spin 0.6s ease-in-out;
}

.emoji#rock {
  width: 117%;
  position: relative;
  left: 5%;
  padding-bottom: 3.5%;
}

.emoji#paper {
  width: 115%;
  position: relative;
  left: -0.7%;
  bottom: 20%;
}

.emoji#scissors {
  width: 115%;
  position: relative;
  left: -5%;
  bottom: 20%;
}

.emoji-flex-container {
  display: flex;
  justify-content: center; /* Centers the emojis horizontally */
  align-items: center; /* Aligns them vertically */
  gap: 6%; /* Adjust the spacing between emojis */
  margin-bottom: 30%;
}



/* Animated Cards (Links to Games) */
.cards-flexbox {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: 18%;
  margin-top: 5%;
}

.cards-flexbox-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center; /* Center items vertically within the group */
  text-align: center;
  padding-bottom: 20%;
}


.animated-card {
  width: 150px;
  height: 150px;
  background-color: var(--highlight-color-light);
  color: var(--primary-text-color);
  border-radius: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: box-shadow 0.2s ease;
  
  margin: 0 5%;
  margin-top: 24%;
}

.animated-card:hover {
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
}

/* Remove underline from links */
.animated-card .card-content {
  text-decoration: none; /* Removes underline */
  color: inherit; /* Ensures the text color matches parent */
}

.animated-card .card-content:hover {
  text-decoration: none; /* Ensure underline is not added on hover */
}

.card-title {
  display: flex; /* Enables flexbox for horizontal alignment */
  justify-content: center; /* Centers the content horizontally */
  align-items: center; /* Aligns the items vertically on the same line */
  gap: 20px; /* Adds space between the two titles */
  margin-top: 4%; /* Adjust this value to move the title higher */
  text-align: center; /* Centers the text */
  font-size: 1.5rem; /* Adjust font size as needed */
  flex-wrap: nowrap;
  margin-left: 5%;
}

.card-title h1 {
  margin: 0; /* Removes default margin */
  padding: 0; /* Ensures no padding is added */
  font-size: inherit; /* Ensures it inherits the parent font size */
  white-space: nowrap;
}

.wrapper {
  position: relative; /* Ensures animations with 'transform' work */
}


/* Ensure the parent container has relative positioning for absolute children */
.container {
  background-color: transparent;
  position: relative;
  width: 100%;
  height: 100vh;
  margin-bottom: 20%;
}

/* SpinCard Component */
.spinCard {
  position: relative;
  width: 100%; /* Full width of the parent */
  aspect-ratio: 16 / 9; /* Lock aspect ratio to 16:9 */
  top: -5%;
}

/* Ensure the canvas fills the container */
.spinCard canvas {
  background-color: transparent;
  width: 100%;
  height: 100%;
  display: block;
  outline: none;
}


/* TitleCard Component */
.titleCard {
  position: absolute;
  top: 40%; 
  left: 30%; 
  transform: translate(-50%, -50%); /* Offset to truly center */
  z-index: 2; 
}

/* TitleCard Container */
.cardContainer {
  position: relative;
  background-color: var(--dark-background);
  border: 1px solid var(--chord-element-border);
  border-radius: 12px;
  padding: 24px;
  max-width: 600px;
  margin: 0 auto;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
}

.cardContainer:hover {
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.5);
}

/* Text Styling */
.header {
  font-size: 4rem;
  color: var(--highlight-color);
  margin: 0 0 8px;
}

.subheader {
  font-size: 1.5rem;
  color: var(--highlight-color-light);
  margin: 0 0 16px;
}

.bio {
  font-size: 1rem;
  color: var(--secondary-text-color);
  line-height: 1.5;
  margin: 0;
}


/* RSVP */
.RSVPButton {
  position: absolute;
  top: 70%;
  left: 19%;
}

.RSVPList {
  position: absolute;
  top: 70%;
  left: 40%;
}

@media (max-width: 2000px) {
  .RSVPButton {
    left: 22%;
  }
}

@media (max-width: 1080px) {
  .RSVPButton {
    left: 15%;
  }
}

@media (max-width: 940px) {
  .RSVPButton {
    left: 13%;
  }

  .RSVPList {
    left: 43%;
  }
}

@media (max-width: 835px) {
  .RSVPButton {
    left: 13%;
  }

  .RSVPList {
    left: 50%;
  }
}

@media (max-width: 768px) {
  .RSVPButton {
    top: 82%;
    left: 30%;
  }

  .RSVPList {
    top: 1%;
    left: 70%;
  }

  .titleCard {
    top: 60%; 
    left: 50%; 
    width: 60%;
  }

  .spinCard {
    right: 24%;
    top: -4%;;
  }

  .header {
    font-size: 3rem;
    color: var(--highlight-color);
    margin: 0 0 8px;
  }
  
  .subheader {
    font-size: 1.5rem;
    color: var(--highlight-color-light);
    margin: 0 0 16px;
  }
  
  .bio {
    font-size: 0.9rem;
    color: var(--secondary-text-color);
    line-height: 1.5;
    margin: 0;
  }
}

@media (max-width: 660px) {
  .RSVPButton {
    top: 75%;
    left: 23%;
  }

  .titleCard {
    top: 55%;  
    width: 80%;
  }

  .spinCard {
    top: -3%;
  }

  .header {
    font-size: 2rem;
    color: var(--highlight-color);
    margin: 0 0 8px;
  }
  
  .subheader {
    font-size: 1rem;
    color: var(--highlight-color-light);
    margin: 0 0 16px;
  }
  
  .bio {
    font-size: 0.7rem;
    color: var(--secondary-text-color);
    line-height: 1.5;
    margin: 0;
  }
}

@media (max-width: 510px) {
  .RSVPButton {
    top: 75%;
    left: 14%;
  }
  
  .spinCard {
    top: 3%;
    right: 25%;
  }
  
  .titleCard {
    top: 52%;  
  }
}




/* RPG Stats */
.stat-container {
  background-color: var(--chord-element-border);
  width: 20%; /* Container width */
  border-radius: 15px; /* Smoothly round the edges */
  padding: 20px; /* Add padding for spacing */
  margin: auto; /* Centers horizontally */
  position: fixed; /* Keeps the container within the viewport */
  top: 50%; /* Position vertically relative to the viewport */
  left: 66%; /* Position horizontally relative to the viewport */
  transform: translate(-50%, -40%); /* Adjust to move it slightly downward */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add a shadow for better visuals */
  overflow: auto; /* Prevent content from being cut off */
}

.stat {
  display: flex;
  align-items: center; /* Vertically center items */
  justify-content: center; /* Horizontally center items */
  gap: 10px; /* Space between items */
}

.stat-info {
  text-align: center;
  min-width: 50px; /* Ensure consistent width for numbers */
  font-size: 1rem;
}

.stat-info h2 {
  color: var(--highlight-color); /* Change text color of h2 */
  margin: 0; /* Remove default margins */
}

.arrow {
  background-color: var(--highlight-color);
  color: var(--text-color);
  border: none;
  padding: 10px 15px;
  font-size: 1.5rem;
  border-radius: 10px; /* Rounded corners */
  cursor: pointer;
  transition: background-color 0.3s;
}

.arrow:hover {
  background-color: var(--accent-color);
}

.level-selector h1 {
  position: fixed;
  top: 50%;
  left: 15%;
}

.height-selector {
  display: flex;
  flex-direction: column; /* Stack header and content */
  align-items: center; /* Center contents horizontally */
  justify-content: center; /* Center contents vertically */
  position: fixed; /* Stay within the viewport and allow scrolling if needed */
  top: 70%;
  left: 50%;
  transform: translate(-50%, -50%); /* Adjust for exact center alignment */
  background-color: var(--chord-element-border); /* Rounded container background */
  padding: 30px;
  border-radius: 15px; /* Rounded corners */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); /* Optional shadow for depth */
  width: 80%; /* Take up more horizontal space */
  max-width: 1000px; /* Limit the maximum width */
  overflow: auto; /* Prevent content cutoff */
}

.height-selector h2 {
  color: var(--accent-color-dark);
  margin-bottom: 20px; /* Space between header and list */
}

.height-selector ul {
  display: flex; /* Use flexbox for inline items */
  flex-wrap: wrap; /* Allow wrapping to the next row if needed */
  gap: 20px; /* Space between items */
  list-style: none;
  padding: 0;
  margin: 0;
  justify-content: center; /* Center items horizontally */
}

.height-selector li {
  margin: 0; /* Remove margin to rely on gap spacing */
}

.height-selector button {
  padding: 10px 20px;
  border: none;
  border-radius: 10px; /* Rounder buttons */
  cursor: pointer;
  background-color: var(--accent-color-dark); /* Default button background */
  color: var(--text-color); /* Default button text color */
  transition: background-color 0.3s; /* Smooth hover effect */
}

.height-selector button:hover {
  background-color: var(--highlight-color); /* Change color on hover */
  color: white;
}

.height-selector button.selected {
  background-color: var(--highlight-color);
  color: white;
}

.points-text {
  position: fixed;
  left: 8%;
  top: 26%;
}

.name-step {
  position: fixed;
  left: 15%;
}

.trait-selector {
  display: flex;
  flex-direction: column; /* Stack header and content vertically */
  align-items: center; /* Center contents horizontally */
  justify-content: center; /* Center contents vertically */
  position: relative; /* Allow normal positioning */
  padding: 30px;
  background-color: var(--chord-element-border); /* Background color */
  border-radius: 15px; /* Rounded corners */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); /* Optional shadow for depth */
  width: 80%; /* Take up more horizontal space */
  max-width: 1000px; /* Limit the maximum width */
  overflow: auto; /* Prevent content cutoff */
  margin: 0 auto; /* Center the container */
}

.trait-selector h2 {
  color: var(--accent-color-dark); /* Header color */
  margin-bottom: 20px; /* Space between header and list */
}

.trait-group {
  margin-bottom: 20px; /* Space between trait groups */
}

.trait-group h3 {
  color: var(--highlight-color); /* Trait group header color */
}

.trait-selector ul {
  display: flex; /* Use flexbox for inline items */
  flex-wrap: wrap; /* Allow wrapping to the next row if needed */
  gap: 20px; /* Space between items */
  list-style: none;
  padding: 0;
  margin: 0;
  justify-content: center; /* Center items horizontally */
}

.trait-selector li {
  margin: 0; /* Remove margin to rely on gap spacing */
}

.trait-selector button {
  padding: 10px 20px;
  border: none;
  border-radius: 10px; /* Rounder buttons */
  cursor: pointer;
  background-color: var(--accent-color-dark); /* Default button background */
  color: var(--text-color); /* Default button text color */
  transition: background-color 0.3s; /* Smooth hover effect */
}

.trait-selector button:hover {
  background-color: var(--highlight-color); /* Change color on hover */
  color: white;
}

.trait-selector button.selected {
  background-color: var(--highlight-color);
  color: white;
}

.trait-text {
  text-align: center;
}

.disadvantage-selector {
  display: flex;
  flex-direction: column; /* Stack header and content */
  align-items: center; /* Center contents horizontally */
  justify-content: center; /* Center contents vertically */
  position: fixed; /* Stay within the viewport and allow scrolling if needed */
  top: 70%;
  left: 50%;
  transform: translate(-50%, -50%); /* Adjust for exact center alignment */
  background-color: var(--chord-element-border); /* Rounded container background */
  padding: 30px;
  border-radius: 15px; /* Rounded corners */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); /* Optional shadow for depth */
  width: 80%; /* Take up more horizontal space */
  max-width: 1000px; /* Limit the maximum width */
  overflow: auto; /* Prevent content cutoff */
}

.disadvantage-selector h2 {
  color: var(--accent-color-dark);
  margin-bottom: 20px; /* Space between header and list */
}

.disadvantage-selector ul {
  display: flex; /* Use flexbox for inline items */
  flex-wrap: wrap; /* Allow wrapping to the next row if needed */
  gap: 20px; /* Space between items */
  list-style: none;
  padding: 0;
  margin: 0;
  justify-content: center; /* Center items horizontally */
}

.disadvantage-selector li {
  margin: 0; /* Remove margin to rely on gap spacing */
}

.disadvantage-selector button {
  padding: 10px 20px;
  border: none;
  border-radius: 10px; /* Rounder buttons */
  cursor: pointer;
  background-color: var(--accent-color-dark); /* Default button background */
  color: var(--text-color); /* Default button text color */
  transition: background-color 0.3s; /* Smooth hover effect */
}

.disadvantage-selector button:hover {
  background-color: var(--highlight-color); /* Change color on hover */
  color: white;
}

.disadvantage-selector button.selected {
  background-color: var(--highlight-color);
  color: white;
}

.skill-selector {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 70%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--chord-element-border);
  padding: 30px;
  border-radius: 15px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
  width: 80%;
  max-width: 1000px;
  overflow: auto;
}

.skill-selector h2 {
  color: var(--accent-color-dark);
  margin-bottom: 20px;
}

.skill-selector .skill-category {
  margin-bottom: 30px;
}

.skill-selector ul {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  list-style: none;
  padding: 0;
  margin: 0;
  justify-content: center;
}

.skill-selector li {
  margin: 0;
}

.skill-selector button {
  padding: 10px 20px;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  background-color: var(--accent-color-dark);
  color: var(--text-color);
  transition: background-color 0.3s;
}

.skill-selector button:hover {
  background-color: var(--highlight-color);
  color: white;
}

.skill-selector button.selected {
  background-color: var(--highlight-color);
  color: white;
}

.skill-selector button:disabled {
  background-color: #dcdcdc; /* Light gray color for disabled state */
  color: #a0a0a0; /* Dark gray text for disabled state */
  cursor: not-allowed; /* Change the cursor to indicate disabled */
  opacity: 0.6; /* Make the disabled buttons appear slightly faded */
}

.skill-selector button.selected:disabled {
  background-color: #a0a0a0; /* Slightly darker gray for selected disabled buttons */
}



/* Character Viewer */
/* General styling for the character viewer */
.character-viewer {
  font-family: Arial, sans-serif;
  padding: 20px;
  max-width: 900px;
  margin: 0 auto;
}

/* Button styling */
.character-buttons {
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
}

.character-button {
  padding: 10px;
  margin: 5px 0;
  border: 1px solid #ccc;
  border-radius: 5px;
  background-color: var(--accent-color-dark);
  color: white;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.character-button.selected {
  background-color: var(--highlight-color); /* Use your highlight color */
}

.character-button:hover {
  background-color: var(--accent-color);
}

/* Styling for the character details */
.character-details {
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 5px;
  background-color: #f9f9f9;
}

.character-details h2 {
  font-size: 24px;
  margin-bottom: 10px;
}

.character-details h3 {
  font-size: 20px;
  margin-top: 10px;
}

.character-details p, .character-details ul {
  font-size: 16px;
}

.character-details ul {
  list-style-type: none;
  padding: 0;
}

.character-details li {
  margin-bottom: 5px;
}

strong {
  font-weight: bold;
}


